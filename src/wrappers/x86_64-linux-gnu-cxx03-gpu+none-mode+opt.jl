# Autogenerated wrapper script for Reactant_jll for x86_64-linux-gnu-cxx03-gpu+none-mode+opt
export Affine_inc_jl, Arith_inc_jl, Builtin_inc_jl, CHLO_inc_jl, Enzyme_inc_jl, Func_inc_jl, StableHLO_inc_jl, VHLO_inc_jl, libReactantExtra

using CUDA_Driver_jll
JLLWrappers.@generate_wrapper_header("Reactant")
JLLWrappers.@declare_file_product(Affine_inc_jl)
JLLWrappers.@declare_file_product(Arith_inc_jl)
JLLWrappers.@declare_file_product(Builtin_inc_jl)
JLLWrappers.@declare_file_product(CHLO_inc_jl)
JLLWrappers.@declare_file_product(Enzyme_inc_jl)
JLLWrappers.@declare_file_product(Func_inc_jl)
JLLWrappers.@declare_file_product(StableHLO_inc_jl)
JLLWrappers.@declare_file_product(VHLO_inc_jl)
JLLWrappers.@declare_library_product(libReactantExtra, "libReactantExtra.so")
function __init__()
    JLLWrappers.@generate_init_header(CUDA_Driver_jll)
    JLLWrappers.@init_file_product(
        Affine_inc_jl,
        "Affine.inc.jl",
    )

    JLLWrappers.@init_file_product(
        Arith_inc_jl,
        "Arith.inc.jl",
    )

    JLLWrappers.@init_file_product(
        Builtin_inc_jl,
        "Builtin.inc.jl",
    )

    JLLWrappers.@init_file_product(
        CHLO_inc_jl,
        "CHLO.inc.jl",
    )

    JLLWrappers.@init_file_product(
        Enzyme_inc_jl,
        "Enzyme.inc.jl",
    )

    JLLWrappers.@init_file_product(
        Func_inc_jl,
        "Func.inc.jl",
    )

    JLLWrappers.@init_file_product(
        StableHLO_inc_jl,
        "StableHLO.inc.jl",
    )

    JLLWrappers.@init_file_product(
        VHLO_inc_jl,
        "VHLO.inc.jl",
    )

    JLLWrappers.@init_library_product(
        libReactantExtra,
        "lib/libReactantExtra.so",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
