# Autogenerated wrapper script for Reactant_jll for aarch64-apple-darwin-gpu+none-mode+dbg
export Affine_jl, Arith_jl, Builtin_jl, CHLO_jl, Enzyme_jl, Func_jl, StableHLO_jl, VHLO_jl, libReactantExtra

JLLWrappers.@generate_wrapper_header("Reactant")
JLLWrappers.@declare_file_product(Affine_jl)
JLLWrappers.@declare_file_product(Arith_jl)
JLLWrappers.@declare_file_product(Builtin_jl)
JLLWrappers.@declare_file_product(CHLO_jl)
JLLWrappers.@declare_file_product(Enzyme_jl)
JLLWrappers.@declare_file_product(Func_jl)
JLLWrappers.@declare_file_product(StableHLO_jl)
JLLWrappers.@declare_file_product(VHLO_jl)
JLLWrappers.@declare_library_product(libReactantExtra, "@rpath/libReactantExtra.so")
function __init__()
    JLLWrappers.@generate_init_header()
    JLLWrappers.@init_file_product(
        Affine_jl,
        "Affine.jl",
    )

    JLLWrappers.@init_file_product(
        Arith_jl,
        "Arith.jl",
    )

    JLLWrappers.@init_file_product(
        Builtin_jl,
        "Builtin.jl",
    )

    JLLWrappers.@init_file_product(
        CHLO_jl,
        "CHLO.jl",
    )

    JLLWrappers.@init_file_product(
        Enzyme_jl,
        "Enzyme.jl",
    )

    JLLWrappers.@init_file_product(
        Func_jl,
        "Func.jl",
    )

    JLLWrappers.@init_file_product(
        StableHLO_jl,
        "StableHLO.jl",
    )

    JLLWrappers.@init_file_product(
        VHLO_jl,
        "VHLO.jl",
    )

    JLLWrappers.@init_library_product(
        libReactantExtra,
        "lib/libReactantExtra.dylib",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
